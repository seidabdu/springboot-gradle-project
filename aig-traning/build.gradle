plugins {
	id 'org.springframework.boot' version '2.1.3.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'eclipse' // optional, for Eclipse project
	id 'war'
}

group = 'com.acid.aig.traning'
version = '1.0.0'
sourceCompatibility = '1.8'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

repositories {
	mavenCentral()
}

ext {
   springCloudVersion = 'Greenwich.RELEASE'
}

dependencies {

implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'	
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix'
	implementation  'org.springframework.boot:spring-boot-starter-webflux'
	implementation "org.apache.commons:commons-lang3"
	runtimeOnly 'com.h2database:h2'
    runtime "mysql:mysql-connector-java"
   	runtime "com.h2database:h2"
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    testImplementation('io.projectreactor:reactor-test')	 
	compile('io.springfox:springfox-swagger2:2.9.1')
	compile('io.springfox:springfox-swagger-ui:2.9.1')
	compile "com.fasterxml.jackson.dataformat:jackson-dataformat-xml"
	compile('org.projectlombok:lombok:1.18.0')
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}

bootJar {
    baseName = 'gs-reactive-rest-service'
    version =  '0.1.0'
}


dependencyManagement {
   imports {
      mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
   }
}

test {
	useJUnitPlatform()
}
